// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["users", "products", "orders"]
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cart      UserCart?

  @@schema("users")
}

model UserCart {
  id        String      @id @default(uuid()) @db.Uuid
  userId    String      @unique @db.Uuid
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])
  CartItems CartItems[]

  @@schema("users")
}

model CartItems {
  id        String   @id @default(uuid()) @db.Uuid
  cartId    String   @db.Uuid
  productId String   @db.Uuid
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      UserCart @relation(fields: [cartId], references: [id])

  @@schema("users")
}

model Product {
  id               String             @id @default(uuid()) @db.Uuid
  name             String
  price            Float
  description      String
  imageUrl         String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Stock            Stock?
  StockReservation StockReservation[]

  @@schema("products")
}

model Stock {
  id        String   @id @default(uuid()) @db.Uuid
  productId String   @unique @db.Uuid
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])

  @@schema("products")
}

model StockReservation {
  id         String   @id @default(uuid()) @db.Uuid
  productId  String   @db.Uuid
  quantity   Int
  cartItemId String   @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id])

  @@schema("products")
}

model Order {
  id         String       @id @default(uuid()) @db.Uuid
  userId     String       @db.Uuid
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  OrderItems OrderItems[]

  @@schema("orders")
}

model OrderItems {
  id        String   @id @default(uuid()) @db.Uuid
  orderId   String   @db.Uuid
  productId String   @db.Uuid
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])

  @@schema("orders")
}
